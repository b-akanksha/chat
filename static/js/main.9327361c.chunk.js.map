{"version":3,"sources":["components/messageForm/index.js","components/myMessage/index.js","components/othersMessage/index.js","components/chatfeed/index.js","components/loginForm/index.js","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","type","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","bind","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","OthersMessage","lastMessage","isFirstMessageSentByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReciepts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","process","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","root","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9327361c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const { chatId, creds } = props;\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    isTyping(props, chatId);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) {\r\n      sendMessage(creds, chatId, { text });\r\n    }\r\n\r\n    setValue(\"\");\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatId, { files: event.target.files, text: \" \" });\r\n  };\r\n\r\n  return (\r\n    <form className=\"message-form\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"message-input\"\r\n        placeholder=\"Send a message..\"\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n      <label htmlFor=\"upload-button\">\r\n        <span className=\"image-button\">\r\n          <PictureOutlined className=\"picture-icon\" />\r\n        </span>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        multiple={false}\r\n        id=\"upload-button\"\r\n        style={{ display: \"none\" }}\r\n        onChange={handleUpload.bind(this)}\r\n      />\r\n      <button type=\"submit\" className=\"send-button\">\r\n        <SendOutlined className=\"send-icon\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\n\r\nconst MyMessage = ({ message }) => {\r\n  if (message.attachments && message.attachments.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"message attachment\"\r\n        className=\"message-image\"\r\n        style={{ float: \"right\" }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"message\"\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: \"18px\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3b2a50\",\r\n      }}\r\n    >\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessage;\r\n","import React from \"react\";\r\n\r\nconst OthersMessage = ({ message, lastMessage }) => {\r\n  const isFirstMessageSentByUser =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageSentByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{\r\n            backgroundImage: message.sender && `url(${message.sender.avatar})`,\r\n          }}\r\n        />\r\n      )}\r\n      {message.attachments && message.attachments.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message attachment\"\r\n          className=\"message-image\"\r\n          style={{ marginLeft: isFirstMessageSentByUser ? \"4px\" : \"48px\" }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n            backgroundColor: \"#cabcdc\",\r\n            marginLeft: isFirstMessageSentByUser ? \"4px\" : \"48px\",\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OthersMessage;\r\n","import React from \"react\";\r\nimport MessageForm from \"../messageForm\";\r\nimport MyMessage from \"../myMessage\";\r\nimport OthersMessage from \"../othersMessage\";\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReciepts = (message, isMyMessage) =>\r\n    chat.people.map(\r\n      (person, index) =>\r\n        person.last_read === message.id && (\r\n          <div\r\n            key={`read_${index}`}\r\n            className=\"read-reciepts\"\r\n            style={{\r\n              float: isMyMessage ? \"right\" : \"left\",\r\n              backgroundImage:\r\n                person.person.avatar && `url(${person.person.avatar})`,\r\n            }}\r\n          ></div>\r\n        )\r\n    );\r\n\r\n  const renderMessages = () => {\r\n    const keys = Object.keys(messages);\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage ? (\r\n              <MyMessage message={message} />\r\n            ) : (\r\n              <OthersMessage\r\n                message={message}\r\n                lastMessage={messages[lastMessageKey]}\r\n              />\r\n            )}\r\n            <div\r\n              className=\"read-reciepts\"\r\n              style={{\r\n                marginRight: isMyMessage ? \"18px\" : \"0px\",\r\n                marginLeft: isMyMessage ? \"0px\" : \"68px\",\r\n              }}\r\n            >\r\n              {renderReadReciepts(message, isMyMessage)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {\" \"}\r\n          {chat?.people?.map((person) => ` ${person?.person?.username}`)}\r\n        </div>\r\n      </div>\r\n\r\n      {renderMessages()}\r\n      <div style={{ height: \"100px\" }}></div>\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatId={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = {\r\n      \"Project-ID\": process.env.REACT_APP_PROJECT_ID,\r\n      \"User-Name\": username,\r\n      \"User-Secret\": password,\r\n    };\r\n\r\n    try {\r\n      await axios.get(\"https://api.chatengine.io/chats\", {\r\n        headers: authObject,\r\n      });\r\n\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"password\", password);\r\n\r\n      window.location.reload();\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(\"Oops, incorrect credentials.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 className=\"title\">Chat Application</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Start chatting</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <h1>{error}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { ChatEngine } from \"react-chat-engine\";\r\nimport \"./App.css\";\r\nimport ChatFeed from \"./components/chatfeed\";\r\nimport LoginForm from \"./components/loginForm\";\r\n\r\nfunction App() {\r\n  if (!localStorage.getItem(\"username\")) return <LoginForm />;\r\n\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      projectID={process.env.REACT_APP_PROJECT_ID}\r\n      userName={localStorage.getItem(\"username\")}\r\n      userSecret={localStorage.getItem(\"password\")}\r\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n      onNewMessage={() =>\r\n        new Audio(\r\n          \"https://chat-engine-assets.s3.amazonaws.com/click.mp3\"\r\n        ).play()\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nconst root = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  root\r\n);\r\n"],"sourceRoot":""}